//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: autoFunc_d_fk_dq.cpp
//
// MATLAB Coder version            : 5.1
// C/C++ source code generated on  : 10-Aug-2021 14:50:52
//

// Include Files
#include "autoFunc_d_fk_dq.h"
#include <cmath>

// Function Definitions
//
// AUTOFUNC_D_FK_DQ
//     JACOBIAN = AUTOFUNC_D_FK_DQ(IN1,IN2,IN3)
// Arguments    : const double in1[3]
//                const double in2[3]
//                const double in3[5]
//                double jacobian[9]
// Return Type  : void
//
void autoFunc_d_fk_dq(const double in1[3], const double in2[3], const double
                      in3[5], double jacobian[9])
{
  double b_jacobian_tmp;
  double c_jacobian_tmp;
  double jacobian_tmp;
  double t12;
  double t16;
  double t17;
  double t2;
  double t22;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     10-Aug-2021 14:48:21
  t2 = std::cos(in1[0]);
  t3 = std::cos(in1[1]);
  t4 = std::cos(in1[2]);
  t5 = std::sin(in1[0]);
  t6 = std::sin(in1[1]);
  t7 = std::sin(in1[2]);
  t8 = in1[1] + in1[2];
  t9 = std::cos(t8);
  t8 = std::sin(t8);
  t12 = in2[0] * t9;
  t16 = in2[2] * t8;
  t17 = in3[4] * t8;
  t22 = (t12 + t16) + -t17;
  jacobian[0] = 0.0;
  jacobian_tmp = in2[0] * t2;
  b_jacobian_tmp = in2[2] * t2;
  c_jacobian_tmp = in3[4] * t2;
  jacobian[1] = (((((((-in2[1] * t5 - in3[2] * t5) + t2 * t3 * in3[3]) +
                     jacobian_tmp * t3 * t7) + jacobian_tmp * t4 * t6) -
                   b_jacobian_tmp * t3 * t4) + b_jacobian_tmp * t6 * t7) +
                 c_jacobian_tmp * t3 * t4) - c_jacobian_tmp * t6 * t7;
  jacobian[2] = (((((((in2[1] * t2 + in3[2] * t2) + t3 * t5 * in3[3]) + in2[0] *
                     t3 * t5 * t7) + in2[0] * t4 * t5 * t6) - in2[2] * t3 * t4 *
                   t5) + in2[2] * t5 * t6 * t7) + in3[4] * t3 * t4 * t5) - in3[4]
    * t5 * t6 * t7;
  jacobian_tmp = (in2[2] * t9 + -(in3[4] * t9)) + -(in2[0] * t8);
  jacobian[3] = jacobian_tmp - t3 * in3[3];
  b_jacobian_tmp = ((t6 * in3[3] - t12) - t16) + t17;
  jacobian[4] = -t5 * b_jacobian_tmp;
  jacobian[5] = t2 * b_jacobian_tmp;
  jacobian[6] = jacobian_tmp;
  jacobian[7] = t5 * t22;
  jacobian[8] = -t2 * t22;
}

//
// File trailer for autoFunc_d_fk_dq.cpp
//
// [EOF]
//
