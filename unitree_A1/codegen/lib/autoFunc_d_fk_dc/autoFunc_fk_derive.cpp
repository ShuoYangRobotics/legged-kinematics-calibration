//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: autoFunc_fk_derive.cpp
//
// MATLAB Coder version            : 5.1
// C/C++ source code generated on  : 10-Aug-2021 14:50:52
//

// Include Files
#include "autoFunc_fk_derive.h"
#include <cmath>

// Function Definitions
//
// AUTOFUNC_FK_DERIVE
//     P_BF = AUTOFUNC_FK_DERIVE(IN1,IN2,IN3)
// Arguments    : const double in1[3]
//                const double in2[3]
//                const double in3[5]
//                double p_bf[3]
// Return Type  : void
//
void autoFunc_fk_derive(const double in1[3], const double in2[3], const double
  in3[5], double p_bf[3])
{
  double p_bf_tmp;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     10-Aug-2021 14:48:21
  t2 = std::cos(in1[0]);
  t3 = std::cos(in1[1]);
  t4 = std::cos(in1[2]);
  t5 = std::sin(in1[0]);
  t6 = std::sin(in1[1]);
  t7 = std::sin(in1[2]);
  t8 = in1[1] + in1[2];
  t9 = std::sin(t8);
  p_bf[0] = (((in3[0] + in2[2] * t9) - in3[4] * t9) - t6 * in3[3]) + in2[0] *
    std::cos(t8);
  p_bf[1] = ((((((((in3[1] + in2[1] * t2) + in3[2] * t2) + t3 * t5 * in3[3]) +
                 in2[0] * t3 * t5 * t7) + in2[0] * t4 * t5 * t6) - in2[2] * t3 *
               t4 * t5) + in2[2] * t5 * t6 * t7) + in3[4] * t3 * t4 * t5) - in3
    [4] * t5 * t6 * t7;
  t8 = in2[0] * t2;
  t9 = in2[2] * t2;
  p_bf_tmp = in3[4] * t2;
  p_bf[2] = (((((((in2[1] * t5 + in3[2] * t5) - t2 * t3 * in3[3]) - t8 * t3 * t7)
                - t8 * t4 * t6) + t9 * t3 * t4) - t9 * t6 * t7) - p_bf_tmp * t3 *
             t4) + p_bf_tmp * t6 * t7;
}

//
// File trailer for autoFunc_fk_derive.cpp
//
// [EOF]
//
